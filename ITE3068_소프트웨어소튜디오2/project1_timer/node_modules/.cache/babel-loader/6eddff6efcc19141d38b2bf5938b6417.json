{"ast":null,"code":"var _jsxFileName = \"/Users/kim-yujin/test/src/TimerPannel.js\";\nimport { Component } from 'react';\nimport Timer from './Timer';\nimport TimerControl from './TimerControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TimerPannel extends Component {\n  constructor() {\n    super();\n\n    this.handleStartTimer = () => {\n      this.interval = setInterval(() => {\n        this.setState(prev => {\n          return {\n            activated: true,\n            remained: prev.remained - 1\n          };\n        }); //여기까지 setState()\n      }, 1000); //여기까지 setInterval()\n      //1초(1000)마다 이 콜백함수를 호출하겠다는 뜻\n    };\n\n    this.handleResumeTimer = () => {\n      this.interval = setInterval(() => {\n        this.setState(prev => {\n          return {\n            //일시 정지 상태를 풀어준다\n            paused: false,\n            remained: prev.remained - 1\n          };\n        });\n      }, 1000);\n    };\n\n    this.handleStopTimer = () => {\n      //Interval 활성화를 끈다\n      clearInterval(this.interval);\n      this.setState(() => {\n        //남은 시간을 초기화 한다\n        return {\n          remained: 1500\n        };\n      });\n    };\n\n    this.handlePauseTimer = () => {\n      clearInterval(this.interval);\n      this.setState(() => {\n        //일시 정지 상태로 만든다\n        return {\n          paused: true\n        };\n      });\n    };\n\n    this.state = {\n      remained: 1500,\n      activated: false,\n      paused: false\n    };\n  }\n\n  render() {\n    let {\n      remained,\n      activated,\n      paused\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Timer, {\n        remained: remained\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(TimerControl, {\n        activated: activated,\n        paused: paused,\n        handleStopTimer: this.handleStopTimer,\n        handleStartTimer: this.handleStartTimer,\n        handlePauseTimer: this.handlePauseTimer,\n        handleResumeTimer: this.handleResumeTimer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default TimerPannel;","map":{"version":3,"sources":["/Users/kim-yujin/test/src/TimerPannel.js"],"names":["Component","Timer","TimerControl","TimerPannel","constructor","handleStartTimer","interval","setInterval","setState","prev","activated","remained","handleResumeTimer","paused","handleStopTimer","clearInterval","handlePauseTimer","state","render"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAmC;AAClCI,EAAAA,WAAW,GAAE;AACZ;;AADY,SASbC,gBATa,GASM,MAAM;AACxB,WAAKC,QAAL,GAAeC,WAAW,CAC1B,MAAI;AACH,aAAKC,QAAL,CAAeC,IAAD,IAAU;AACvB,iBAAO;AACNC,YAAAA,SAAS,EAAE,IADL;AAENC,YAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAL,GAAc;AAFlB,WAAP;AAIA,SALD,EADG,CAMA;AACH,OARyB,EAQxB,IARwB,CAA1B,CADwB,CAShB;AACR;AACA,KApBY;;AAAA,SAsBbC,iBAtBa,GAsBO,MAAM;AACzB,WAAKN,QAAL,GAAeC,WAAW,CAC1B,MAAI;AACH,aAAKC,QAAL,CAAeC,IAAD,IAAU;AACvB,iBAAO;AACN;AACAI,YAAAA,MAAM,EAAE,KAFF;AAGNF,YAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAL,GAAc;AAHlB,WAAP;AAKA,SAND;AAOA,OATyB,EASxB,IATwB,CAA1B;AAUC,KAjCW;;AAAA,SAmCbG,eAnCa,GAmCK,MAAM;AACvB;AACAC,MAAAA,aAAa,CAAC,KAAKT,QAAN,CAAb;AACA,WAAKE,QAAL,CAAc,MAAI;AACjB;AACA,eAAO;AAACG,UAAAA,QAAQ,EAAE;AAAX,SAAP;AACA,OAHD;AAIA,KA1CY;;AAAA,SA4CbK,gBA5Ca,GA4CM,MAAM;AACxBD,MAAAA,aAAa,CAAC,KAAKT,QAAN,CAAb;AACA,WAAKE,QAAL,CAAc,MAAI;AACjB;AACA,eAAM;AAAEK,UAAAA,MAAM,EAAC;AAAT,SAAN;AACA,OAHD;AAIA,KAlDY;;AAEZ,SAAKI,KAAL,GAAa;AACbN,MAAAA,QAAQ,EAAE,IADG;AAEbD,MAAAA,SAAS,EAAE,KAFE;AAGbG,MAAAA,MAAM,EAAE;AAHK,KAAb;AAKA;;AA6CDK,EAAAA,MAAM,GAAG;AACR,QAAI;AAACP,MAAAA,QAAD;AAAWD,MAAAA,SAAX;AAAsBG,MAAAA;AAAtB,QAA+B,KAAKI,KAAxC;AACA,wBAAQ;AAAA,8BACP,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAEN;AAAjB;AAAA;AAAA;AAAA;AAAA,cADO,eAEP,QAAC,YAAD;AACC,QAAA,SAAS,EAAID,SADd;AAEC,QAAA,MAAM,EAAIG,MAFX;AAGC,QAAA,eAAe,EAAI,KAAKC,eAHzB;AAIC,QAAA,gBAAgB,EAAI,KAAKT,gBAJ1B;AAKC,QAAA,gBAAgB,EAAI,KAAKW,gBAL1B;AAMC,QAAA,iBAAiB,EAAI,KAAKJ;AAN3B;AAAA;AAAA;AAAA;AAAA,cAFO;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAWA;;AAlEiC;;AAqEnC,eAAeT,WAAf","sourcesContent":["import {Component} from 'react';\nimport Timer from './Timer';\nimport TimerControl from './TimerControl';\n\nclass TimerPannel extends Component{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\tremained: 1500,\n\t\tactivated: false,\n\t\tpaused: false\n\t\t};\n\t}\n\n\thandleStartTimer = () => {\n\t\tthis.interval= setInterval(\n\t\t()=>{\n\t\t\tthis.setState((prev) => {\n\t\t\t\treturn { \n\t\t\t\t\tactivated: true,\n\t\t\t\t\tremained: prev.remained-1\n\t\t\t\t};\n\t\t\t});//여기까지 setState()\n\t\t},1000);//여기까지 setInterval()\n\t\t//1초(1000)마다 이 콜백함수를 호출하겠다는 뜻\n\t}\n\n\thandleResumeTimer = () => {\n\t\tthis.interval= setInterval(\n\t\t()=>{\n\t\t\tthis.setState((prev) => {\n\t\t\t\treturn { \n\t\t\t\t\t//일시 정지 상태를 풀어준다\n\t\t\t\t\tpaused: false,\n\t\t\t\t\tremained: prev.remained-1\n\t\t\t\t};\n\t\t\t});\n\t\t},1000);\n \t}\n\n\thandleStopTimer = () => {\n\t\t//Interval 활성화를 끈다\n\t\tclearInterval(this.interval);\n\t\tthis.setState(()=>{\n\t\t\t//남은 시간을 초기화 한다\n\t\t\treturn\t{remained :1500};\n\t\t});\n\t}\n\n\thandlePauseTimer = () => {\n\t\tclearInterval(this.interval);\n\t\tthis.setState(()=>{\n\t\t\t//일시 정지 상태로 만든다\n\t\t\treturn{ paused:true};\n\t\t});\n\t}\n\n\trender() {\n\t\tlet {remained, activated, paused} =this.state;\n\t\treturn (<div>\n\t\t\t<Timer remained={remained} />\n\t\t\t<TimerControl\n\t\t\t\tactivated = {activated}\n\t\t\t\tpaused = {paused}\n\t\t\t\thandleStopTimer = {this.handleStopTimer}\n\t\t\t\thandleStartTimer = {this.handleStartTimer}\n\t\t\t\thandlePauseTimer = {this.handlePauseTimer}\n\t\t\t\thandleResumeTimer = {this.handleResumeTimer}\n\t\t\t\t/>\n\t\t\t</div>);\n\t}\n}\n\nexport default TimerPannel;\n"]},"metadata":{},"sourceType":"module"}