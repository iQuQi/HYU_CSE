{"ast":null,"code":"var _jsxFileName = \"/Users/kim-yujin/test/src/TimerControl.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet TimerControl = prop => {\n  let {\n    activated,\n    paused,\n    handleStopTimer,\n    handleStartTimer,\n    handlePauseTimer,\n    handleResumeTimer\n  } = prop;\n  console.log(prop); //받아온 프로퍼티 확인\n  //태그 내에 주석은 아래와 같이 처리함을 유의\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"/*\\uC2A4\\uD0D1 \\uBC84\\uD2BC- \\uC2DC\\uC791 \\uBC84\\uD2BC/\\uC7AC\\uC2DC\\uC791 \\uBC84\\uD2BC/\\uC77C\\uC2DC\\uC815\\uC9C0 \\uBC84\\uD2BC(\\uC870\\uAC74\\uC5D0 \\uB530\\uB77C \\uBCC0\\uACBD)*/\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStopTimer,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this),\n    /*활성화가 되지 않은 상황이면 시작 버튼이 표시됨*/\n    !activated ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartTimer,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 6\n    }, this) :\n    /*활성화가 된 상태*/\n    !paused ?\n    /*#__PURE__*/\n\n    /*일시 정지가 되지 않은 상태라면 일시정지 버튼이 노출*/\n    _jsxDEV(\"button\", {\n      onClick: handlePauseTimer,\n      children: \"Pasue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this) :\n    /*#__PURE__*/\n\n    /*일시 정지가 되어 있는 상태라면 재시작 버튼이 노출*/\n    _jsxDEV(\"button\", {\n      onClick: handleResumeTimer,\n      children: \"Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TimerControl;\nexport default TimerControl;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerControl\");","map":{"version":3,"sources":["/Users/kim-yujin/test/src/TimerControl.js"],"names":["TimerControl","prop","activated","paused","handleStopTimer","handleStartTimer","handlePauseTimer","handleResumeTimer","console","log"],"mappings":";;;AAAA,IAAIA,YAAY,GAAEC,IAAD,IAAQ;AACxB,MAAI;AAACC,IAAAA,SAAD;AAAYC,IAAAA,MAAZ;AAAmBC,IAAAA,eAAnB;AAAoCC,IAAAA,gBAApC;AAAqDC,IAAAA,gBAArD;AACJC,IAAAA;AADI,MACgBN,IADpB;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ,EAHwB,CAGL;AAEpB;;AACC,sBAAO;AAAA,4MAEL;AAAQ,MAAA,OAAO,EAAIG,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK;AAIJ;AACA,KAACF,SAAD,gBACC;AAAQ,MAAA,OAAO,EAAEG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAEC;AACA,KAACF,MAAD;AAAA;;AACC;AACA;AAAQ,MAAA,OAAO,EAAEG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;;AAGC;AACA;AAAQ,MAAA,OAAO,EAAEC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAeA,CArBD;;KAAIP,Y;AAuBJ,eAAeA,YAAf","sourcesContent":["let TimerControl=(prop)=>{\n\tlet {activated, paused,handleStopTimer, handleStartTimer,handlePauseTimer,\n\thandleResumeTimer }=prop;\n\tconsole.log(prop); //받아온 프로퍼티 확인\n\n//태그 내에 주석은 아래와 같이 처리함을 유의\n\treturn <div>\n\t\t\t/*스탑 버튼- 시작 버튼/재시작 버튼/일시정지 버튼(조건에 따라 변경)*/\n\t\t\t<button onClick = {handleStopTimer}>Stop</button>\n\t\t\t{\t\n\t\t\t\t/*활성화가 되지 않은 상황이면 시작 버튼이 표시됨*/\n\t\t\t\t!activated ? \n\t\t\t\t\t<button onClick={handleStartTimer}>Start</button> :\n\t\t\t\t\t/*활성화가 된 상태*/\n\t\t\t\t\t!paused ?\n\t\t\t\t\t\t/*일시 정지가 되지 않은 상태라면 일시정지 버튼이 노출*/\n\t\t\t\t\t\t<button onClick={handlePauseTimer}>Pasue</button> :\n\t\t\t\t\t\t/*일시 정지가 되어 있는 상태라면 재시작 버튼이 노출*/\n\t\t\t\t\t\t<button onClick={handleResumeTimer}>Resume</button> \n\t\t\t}\t\t\t\n\t\t\t</div>;\n}\n\nexport default TimerControl;\n"]},"metadata":{},"sourceType":"module"}